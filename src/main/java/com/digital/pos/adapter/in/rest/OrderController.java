package com.digital.pos.adapter.in.rest;

import com.digital.pos.adapter.in.rest.api.OrdersApi;
import com.digital.pos.adapter.in.rest.model.CreateOrderRequest;
import com.digital.pos.adapter.in.rest.model.OrderCreatedResponse;
import com.digital.pos.application.port.in.OrderUseCase;
import io.swagger.v3.oas.annotations.Parameter;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j2;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RestController;

import java.util.UUID;

/**
 * This controller implements the OrdersApi interface generated by OpenAPI.
 * The interface has default methods that return HttpStatus.NOT_IMPLEMENTED,
 * so here we override them to provide the real behavior.
 */
@Validated
@Log4j2
@RestController
@AllArgsConstructor
public class OrderController implements OrdersApi {

  private final OrderUseCase orderUseCase;

  /**
   * POST /api/orders : Place a new order
   */
  @Override
  public ResponseEntity<OrderCreatedResponse> createOrder(
      @Parameter(description = "Create order request", required = true) CreateOrderRequest createOrderRequest) {

    log.info("Received request to create an order for shopId={}, menuItemId={}",
        createOrderRequest.getShopId(), createOrderRequest.getItems());

    OrderCreatedResponse response = orderUseCase.createOrder(createOrderRequest);

    log.info("Order created successfully. orderId={}, queueNumber={}, position={}",
        response.getOrderId(), response.getQueueNumber(), response.getPosition());

    return ResponseEntity.ok(response);
  }


}
